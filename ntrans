#!/usr/bin/env python3

# ntrans - nano wrapper for translate-shell with some features:
#
#   1. Determine direction of translation by current keyboard layout: en:ru <=> ru:en.
#   2. Copy translation to clipboard.
#   3. Send notify message.
#

__version__ = "1.0"

import os
import sys
import optparse
import subprocess


def get_locale():
    try:
        locate = subprocess.check_output(["xkblayout-state", "print", "%e"])
    except FileNotFoundError:
        print("Install 'xkblayout-state' for determine direction of translation.")
        sys.exit(1)
    return locate.decode("utf-8").strip()


def get_direction():
    if get_locale() == 'us':
        return 'en:ru'

    return 'ru:en'


def copy_to_clipboard(text):
    os.system("echo '" + text + "' | tr -d '\n' | xclip -selection c")


def notify_message(text):
    os.system('notify-send "' + text + '"')


def translate(text):
    try:
        return subprocess.check_output(["trans", get_direction(), "-b", "%s" % text]).decode("utf-8")
    except FileNotFoundError as e:
        print("Install 'translate-shell' for text translation.")
        sys.exit(1)


def main():
    optparse.OptionParser.format_description = lambda self, formatter: self.description
    parser = optparse.OptionParser(description='ntrans is nano wrapper for translate-shell with some features:\n'
                                               '\t1. Determine direction of translation by current keyboard layout: '
                                               'en:ru <=> ru:en.\n'
                                               '\t2. Copy translation to clipboard.\n'
                                               '\t3. Send notify message.\n'
                                   ,
                                   usage="usage: %prog [-h] text",
                                   version="%prog {}".format(__version__))

    parser.add_option("--trans-update", action="store_true", dest="trans_update",
                      help="update translate shell to the latest version")

    parser.add_option("--self-update", action="store_true", dest="self_update",
                      help="update ntrans to the latest version")

    (options, args) = parser.parse_args()

    if options.trans_update:
        print('Updating trans...')

        try:
            file_path = subprocess.check_output(["which", "trans"]).strip().decode("utf-8")
            dir_path = os.path.dirname(file_path)

            os.system('rm {}'.format(file_path))
            os.system('cd {} && wget git.io/trans && chmod +x trans'.format(dir_path))

            exit(0)

        except subprocess.CalledProcessError as ex:
            print(ex)
            exit(1)

    if options.self_update:
        print('Self updating...')

        file_path = os.path.realpath(__file__)
        dir_path = os.path.dirname(file_path)
        base_filename = os.path.basename(__file__)

        os.system('rm {}'.format(file_path))
        os.system('cd {} && wget git.io/vCb3W -O ntrans && chmod +x {}'.format(dir_path, base_filename))
        exit(0)

    if len(args) == 0:
        parser.print_help()
        exit(0)

    text = translate(' '.join(args))

    copy_to_clipboard(text)
    notify_message(text)

    print(text)


if __name__ == "__main__":
    main()
